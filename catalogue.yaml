- name: installing and starting catalogue service
  hosts: catalogue
  become: yes
  tasks: 
  - name: setting nodejs repos
    ansible.builtin.shell: 'curl -sL https://rpm.nodesource.com/setup_lts.x | bash'

  - name: installing nodejs
    ansible.builtin.yum:
     name: nodejs
     state: installed
    
  - name: checking user exists or not
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true

  - name: if user not  exists creating user
    ansible.builtin.user:
     name: roboshop
    when: output.rc != 0

  - name: checking directory exists or not 
    ansible.builtin.stat: 
      path: /app
    register: directory
  - name: printing output directory checking
    ansible.builtin.debug:
      msg: "output: {{directory}}"
  - name: creating directory app if not exists
    ansible.builtin.file:
     path: /app
     state: directory
    when: directory.stat.exists == false

  - name: downloading file from url
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp
  - name: Extracting artifacts into app directory
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
    
  - name: install dependencies
    ansible.builtin.command: npm install 
    args: 
      chdir: /app

  - name: copying catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
  
  - name: copying mongo repo 
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongodb-org-8.0.repo

  - name: installing mongodb
    ansible.builtin.yum:
     name: mongodb-org
     state: installed
  

  - name: load schema
    ansible.builtin.shell: mongo --host 44.211.42.46 < /app/schema/catalogue.js



  - name: daemon reload 
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: catalogue service start
    ansible.builtin.service: 
     name: catalogue
     state: started
     enabled: yes

